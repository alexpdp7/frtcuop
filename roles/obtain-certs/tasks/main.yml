- name: Create data directory
  file:
    path: data
    state: directory
- name: Create account key
  openssl_privatekey:
    path: "data/acme-account.key"
- name: Create private key
  openssl_privatekey:
    path: "data/cert-{{ domain }}.key"
- name: Create csr
  openssl_csr:
    path: "data/cert-{{ domain }}.csr"
    privatekey_path: "data/cert-{{ domain }}.key"
    common_name: "{{ domain }}"
    subjectAltName: "DNS:xmpp-upload.{{ domain }}"
- name: Create challenge
  acme_certificate:
    account_key_src: "data/acme-account.key"
    account_email: "{{ acme_email }}"
    src: "data/cert-{{ domain }}.csr"
    cert: "data/cert-{{ domain }}.crt"
    challenge: dns-01
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    acme_version: 2
    terms_agreed: yes
  register: challenge
- name: Address challenge using Route 53
  route53:
    zone: "{{ dns_aws_zone }}"
    record: "{{ challenge.challenge_data[item]['dns-01'].record }}"
    type: TXT
    ttl: 60
    state: present
    overwrite: yes
    wait: yes
    value: "{{ challenge.challenge_data[item]['dns-01'].resource_value | regex_replace('^(.*)$', '\"\\1\"') }}"
  loop:
    - "{{ domain }}"
    - "xmpp-upload.{{ domain }}"
  when: challenge is changed and domain in challenge.challenge_data
- name: Retrieve cert
  acme_certificate:
    account_key_src: "data/acme-account.key"
    account_email: "{{ acme_email }}"
    src: "data/cert-{{ domain }}.csr"
    cert: "data/cert-{{ domain }}.crt"
    fullchain: "data/cert-{{ domain }}-fullchain.crt"
    chain: "data/cert-{{ domain }}-intermediate.crt"
    challenge: dns-01
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    acme_version: 2
    data: "{{ challenge }}"
  when: challenge is changed
